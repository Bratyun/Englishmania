// <auto-generated />
using System;
using Englishmania.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Englishmania.DAL.Migrations
{
    [DbContext(typeof(EnglishmaniaContext))]
    partial class EnglishmaniaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Englishmania.DAL.Entities.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Levels");

                    b.HasData(
                        new { Id = 1, Name = "Low" },
                        new { Id = 2, Name = "Medium" },
                        new { Id = 3, Name = "High" }
                    );
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.Text", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body");

                    b.Property<int>("LevelId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.TopicVocabulary", b =>
                {
                    b.Property<int>("TopicId");

                    b.Property<int>("VocabularyId");

                    b.HasKey("TopicId", "VocabularyId");

                    b.ToTable("TopicVocabularies");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("LevelId");

                    b.Property<string>("Login");

                    b.Property<string>("PasswordHash");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique()
                        .HasFilter("[Login] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.UserVocabulary", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("VocabularyId");

                    b.HasKey("UserId", "VocabularyId");

                    b.ToTable("UserVocabularies");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.Vocabulary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPrivate");

                    b.Property<int>("LevelId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Vocabularies");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("English");

                    b.Property<string>("Russian");

                    b.HasKey("Id");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.WordText", b =>
                {
                    b.Property<int>("WordId");

                    b.Property<int>("TextId");

                    b.Property<int>("NumberInText");

                    b.HasKey("WordId", "TextId");

                    b.ToTable("WordTexts");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.WordUser", b =>
                {
                    b.Property<int>("WordId");

                    b.Property<int>("UserId");

                    b.Property<int>("Count");

                    b.Property<DateTime>("LastUse");

                    b.HasKey("WordId", "UserId");

                    b.ToTable("WordUsers");
                });

            modelBuilder.Entity("Englishmania.DAL.Entities.WordVocabulary", b =>
                {
                    b.Property<int>("WordId");

                    b.Property<int>("VocabularyId");

                    b.HasKey("WordId", "VocabularyId");

                    b.ToTable("WordVocabularies");
                });
#pragma warning restore 612, 618
        }
    }
}
